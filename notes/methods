# https://playcode.io/javascript/methods
https://doesitmutate.xyz/
![80/20](https://public-files.gumroad.com/img9k2mfcg89l3cs9qa0tjs1wvfp)

# Array Methods:
Mutating Array Method:
- splice(), shift(), unshift()??
sort()
- Converts elements into strings then compares Unicode values default sort order is ascending
- Uses compareFn() for numbers or custom sorting

Non-Mutating:
- flat(), split()??
- slice(start, end) â€“ returns a shallow copy of part of an array or string into a new array object
  start is inclusive, end is exclusive

forEach - iterates over elements but does not return a new array (unlike map)
# const numbers = [1, 2, 3];
# numbers.forEach((n) => {
#   console.log(n);
# });

JSON.stringify - Convertys a JS object to a JSON string
JSON.parse - Convertys JSON string to a JSON object
- Local storage only stores strings, not objects
- Used for data exchange between server and web apps
# const name = `["Spongebob", "Patrick", "Squidward", "Sandy"]`;
# const jsonString = JSON.stringify(name);
# console.log(jsonString);

# https://youtu.be/R8rmfD9Y5-c?si=5hOnH1vRqB3uiqSR
const items = [
  { name: "Bike", price: 100 },
  { name: "TV", price: 200 },
  { name: "Album", price: 10 },
  { name: "Book", price: 5 },
  { name: "Computer", price: 1000 },
  { name: "Keyboard", price: 25 },
];

const total = items.reduce((accu, curr) => {
  return accu + curr.price;
}, 0);

const filteredItems = items.filter((item) => {
  return item.price <= 100;
});

const itemName = items.map((item) => {
  return item.name;
});

const foundItem = items.find((item) => {
  return item.name == "Book";
});

items.forEach((item) => {
  console.log(item.name);
});

const hasInexpensiveItems = items.some((item) => {
  return item.price <= 100;
});

const array = [1, 2, 3, 4, 5]
const includesTwo = array.includes(2);
console.log(includesTwo)


# Object Methods:
- freeze() - Freezing an object is the highest integrity level that JavaScript provides
- seal() - New properties cannot be added, existing properties cannot be removed
  Values of existing properties can still be changed as long as they are writable
- assign(target, source) copies properties from source(s) to target??


# Both:
toString - Controls how value is stringified
- Converts numbers to different bases
- Returns object's string representation
